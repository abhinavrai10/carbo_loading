name: ADF and Databricks CI/CD
on:
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  deploy-databricks:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'Databricks Notebooks/') || github.event_name == 'workflow_dispatch'
    steps:
    - uses: actions/checkout@v3
    - name: Deploy Databricks Notebooks
      run: |
        echo "Starting Databricks deployment to /carbo-loading-UAT"
        for file in "Databricks Notebooks"/*; do
          echo "Deploying $file to /carbo-loading-UAT/$(basename "$file")"
          curl -n -X POST https://${{ secrets.DATABRICKS_HOST }}/api/2.0/workspace/import \
            -H "Authorization: Bearer ${{ secrets.DATABRICKS_TOKEN }}" \
            -F "path=/carbo-loading-UAT/$(basename "$file")" \
            -F "format=SOURCE" \
            -F "content=$(base64 "$file")"
        done
        echo "Databricks deployment completed"
  deploy-adf:
    runs-on: ubuntu-latest
    needs: deploy-databricks
    if: always() || contains(github.event.head_commit.modified, 'adf-carbo/') || github.event_name == 'workflow_dispatch'
    steps:
    - uses: actions/checkout@v3
      with:
        ref: adf_publish
    - name: Install Azure CLI
      run: |
        echo "Installing Azure CLI"
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    - name: Login to Azure
      run: |
        echo "Logging into Azure"
        az login --service-principal -u "${{ secrets.AZURE_CLIENT_ID }}" -p "${{ secrets.AZURE_CLIENT_SECRET }}" --tenant "${{ secrets.AZURE_TENANT_ID }}"
    - name: Deploy ADF
      run: |
        echo "Running ADF deployment to adf-carbo-uat"
        az deployment group create --resource-group rg-carbo --template-file ./adf-carbo/ARMTemplateForFactory.json --parameters factoryName=adf-carbo-uat --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        echo "ADF deployment completed"
