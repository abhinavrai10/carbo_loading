{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-carbo"
		},
		"ls_adls_gen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_gen2'"
		},
		"ls_databricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_databricks'"
		},
		"ls_on_prem_sql_server_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_on_prem_sql_server'"
		},
		"ls_adls_gen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storagecarbo.dfs.core.windows.net/"
		},
		"ls_databricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0301-122243-ucy4o150"
		},
		"ls_on_prem_sql_server_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "DESKTOP-RJ02047\\SQLEXPRESS"
		},
		"ls_on_prem_sql_server_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "CarboLoadingDB"
		},
		"ls_on_prem_sql_server_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "carbo"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_incremental_load_to_bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SetLastDay",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LookupWatermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "last_day",
							"value": {
								"value": "@activity('LookupWatermark').output.firstRow.dh_transactions.last_day",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetLastFullLoad",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LookupWatermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "last_full_load",
							"value": {
								"value": "@activity('LookupWatermark').output.firstRow.dh_product_lookup.last_full_load",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetLastWeek",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LookupWatermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "last_week",
							"value": {
								"value": "@activity('LookupWatermark').output.firstRow.dh_causal_lookup.last_week",
								"type": "Expression"
							}
						}
					},
					{
						"name": "copy_dh_transactions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SetLastDay",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM dh_transactions WHERE day > @{variables('last_day')}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "upc",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "upc",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "dollar_sales",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "dollar_sales",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "units",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "units",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "time_of_transaction",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "time_of_transaction",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "geography",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "geography",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "week",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "week",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "household",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "household",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "store",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "store",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "basket",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "basket",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "day",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "day",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "coupon",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "coupon",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql_dh_transaction",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_dh_transactions",
								"type": "DatasetReference",
								"parameters": {
									"directoryPath": {
										"value": "@{utcNow('yyyyMMddHHmmss')}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LookupWatermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adls_watermark",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_dh_product_lookup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SetLastFullLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql_dh_product_lookup",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_dh_product_lookup",
								"type": "DatasetReference",
								"parameters": {
									"directoryPath": {
										"value": "full_load_@{utcNow('yyyyMMddHHmmss')}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "copy_dh_causal_lookup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SetLastWeek",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM dh_causal_lookup WHERE week > @{variables('last_week')}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql_dh_causal_lookup",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_dh_causal_lookup",
								"type": "DatasetReference",
								"parameters": {
									"directoryPath": {
										"value": "@{utcNow('yyyyMMddHHmmss')}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "set_last_full_load",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "copy_dh_product_lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "last_full_load",
							"value": {
								"value": "@utcNow('yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update_last_day",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "lookup_max_last_day",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "last_day",
							"value": {
								"value": "@string(coalesce(activity('lookup_max_last_day').output.firstRow.max_day, '0'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "lookup_max_last_day",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "copy_dh_transactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(day) AS max_day FROM dh_transactions",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_dh_transaction",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "lookup_max_last_week",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "copy_dh_causal_lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(week) AS max_week FROM dh_causal_lookup",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_dh_causal_lookup",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "update_last_week",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "lookup_max_last_week",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "last_week",
							"value": {
								"value": "@string(coalesce(activity('lookup_max_last_week').output.firstRow.max_week, '0'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update_watermark",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "update_last_day",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set_last_full_load",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "update_last_week",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2021-02-12",
								"x-ms-blob-type": "BlockBlob",
								"Content-Type": "application/json"
							},
							"url": {
								"value": "https://storagecarbo.blob.core.windows.net/bronze/metadata/watermark.json?api-version=2021-02-12",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('{\"dh_transactions\": {\"last_day\": \"', variables('last_day'), '\"}, \"dh_product_lookup\": {\"last_full_load\": \"', variables('last_full_load'), '\"}, \"dh_causal_lookup\": {\"last_week\": \"', variables('last_week'), '\"}}')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "silver_dh_transactions",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/carbo-loading/silver_transactions"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "silver_product_lookup",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/carbo-loading/silver_product_lookup"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "silver_causal_lookup",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/carbo-loading/silver_causal_lookup"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "gold_dim_carbo",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "silver_dh_transactions",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "silver_product_lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "silver_causal_lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/carbo-loading/gold_dim_carbo"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "gold_fact_sales",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "gold_dim_carbo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/carbo-loading/gold_fact_carbo"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"watermark": {
						"type": "String"
					},
					"last_day": {
						"type": "String"
					},
					"last_full_load": {
						"type": "String"
					},
					"last_week": {
						"type": "String"
					},
					"row_count_product_lookup": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-04T09:47:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sql_dh_transaction')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_dh_transactions')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_watermark')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_dh_product_lookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_dh_product_lookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_dh_causal_lookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_dh_causal_lookup')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_bronze')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string",
						"defaultValue": "bronze"
					},
					"tableName": {
						"type": "string",
						"defaultValue": "dh_transactions"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "data.parquet",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().tableName, '/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'))",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_dh_causal_lookup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directoryPath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().directoryPath",
							"type": "Expression"
						},
						"folderPath": "dh_causal_lookup",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_dh_product_lookup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directoryPath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().directoryPath",
							"type": "Expression"
						},
						"folderPath": "dh_product_lookup",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_dh_transactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directoryPath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().directoryPath",
							"type": "Expression"
						},
						"folderPath": "dh_transactions",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_watermark')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "watermark.json",
						"folderPath": "metadata",
						"fileSystem": "bronze"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"dh_transactions": {
							"type": "object",
							"properties": {
								"last_day": {
									"type": "string"
								}
							}
						},
						"dh_product_lookup": {
							"type": "object",
							"properties": {
								"last_full_load": {
									"type": "string"
								}
							}
						},
						"dh_causal_lookup": {
							"type": "object",
							"properties": {
								"last_week": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_dh_causal_lookup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_on_prem_sql_server",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "upc",
						"type": "varchar"
					},
					{
						"name": "store",
						"type": "nvarchar"
					},
					{
						"name": "week",
						"type": "int",
						"precision": 10
					},
					{
						"name": "feature_desc",
						"type": "nvarchar"
					},
					{
						"name": "display_desc",
						"type": "nvarchar"
					},
					{
						"name": "geography",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dh_causal_lookup"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_on_prem_sql_server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_dh_product_lookup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_on_prem_sql_server",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "upc",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "product_description",
						"type": "nvarchar"
					},
					{
						"name": "commodity",
						"type": "nvarchar"
					},
					{
						"name": "brand",
						"type": "nvarchar"
					},
					{
						"name": "product_size",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dh_product_lookup"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_on_prem_sql_server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_dh_transaction')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_on_prem_sql_server",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "upc",
						"type": "varchar"
					},
					{
						"name": "store",
						"type": "nvarchar"
					},
					{
						"name": "week",
						"type": "int",
						"precision": 10
					},
					{
						"name": "feature_desc",
						"type": "nvarchar"
					},
					{
						"name": "display_desc",
						"type": "nvarchar"
					},
					{
						"name": "geography",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dh_transactions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_on_prem_sql_server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_gen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_gen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_gen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-2579873491025513.13.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_databricks_accessToken')]"
					},
					"existingClusterId": "[parameters('ls_databricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_on_prem_sql_server')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('ls_on_prem_sql_server_properties_typeProperties_server')]",
					"database": "[parameters('ls_on_prem_sql_server_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_on_prem_sql_server_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_on_prem_sql_server_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"selfContainedInteractiveAuthoringEnabled": true
				}
			},
			"dependsOn": []
		}
	]
}